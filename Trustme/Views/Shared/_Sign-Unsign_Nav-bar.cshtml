@{

    @using System.Security.Claims;
    @using Trustme.IServices;



    @inject IKeyRepository _KeyRepository
    @inject IHttpRequestFunctions _IHttpRequestFunctions;
    @inject IUnsignedDocumentRepository _UnsignedDocumentRepository;
    @inject IUserRepository _UserRepository;
    @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor


    var username = HttpContextAccessor.HttpContext.User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.NameIdentifier)?.Value;
    var userRole = HttpContextAccessor.HttpContext.User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role)?.Value;
    UserRoleUserName userRoleUserName = new UserRoleUserName { UserName = username, UserRole = userRole };
    var NrSeen = 0;
    if (username != null)
    {
        NrSeen = _UnsignedDocumentRepository.CountSeen(_UserRepository.GetUserbyUsername(username));
    }
}
<ul class="nav nav-tabs">
    <li class="nav-item">
        @{
            if (TempData["UActiveTab"] != null)
            {

                <a class="nav-link active" asp-controller="SignDocuments" asp-action="UnsignedDocuments">Unsigned</a>
            }
            else
            {
                if (NrSeen != 0)
                {
                    <span class="badge badge-pill badge-primary" style="float:right;margin-bottom:-10px;">@NrSeen</span>
                }
                <a class="nav-link" asp-controller="SignDocuments" asp-action="UnsignedDocuments">Unsigned</a>
            }
        }
    </li>
    <li class="nav-item">
        @{
            if (TempData["SActiveTab"] != null)
            {
                <a class="nav-link active" asp-controller="SignedDocuments" asp-action="SignedDocumentsFromUsers">Signed</a>

            }
            else
            {
                <a class="nav-link" asp-controller="SignedDocuments" asp-action="SignedDocumentsFromUsers">Signed</a>
            }

        }
    </li>
</ul>

